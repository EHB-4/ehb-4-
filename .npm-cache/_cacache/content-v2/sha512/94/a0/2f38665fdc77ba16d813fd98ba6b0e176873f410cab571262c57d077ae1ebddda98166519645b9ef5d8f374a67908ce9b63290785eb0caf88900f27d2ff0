{"_id":"react-use-suspense","_rev":"1-644a475d3f833e38abf68d3a302ae69e","name":"react-use-suspense","dist-tags":{"latest":"0.0.1"},"versions":{"0.0.1":{"name":"react-use-suspense","version":"0.0.1","description":"Description","author":{"name":"Tom Lienard"},"license":"MIT","main":"./dist/cjs/index.js","module":"./dist/esm/index.js","types":"./dist/index.d.ts","exports":{".":{"require":"./dist/cjs/index.js","import":"./dist/esm/index.js"}},"repository":{"type":"git","url":"git+https://github.com/QuiiBz/react-use-suspense.git"},"bugs":{"url":"https://github.com/QuiiBz/react-use-suspense/issues"},"homepage":"https://github.com/QuiiBz/react-use-suspense#readme","scripts":{"dev":"concurrently 'pnpm:dev:*'","dev:js":"node ./build.js -sourcemap -watch","dev:types":"tsc --outDir dist src/index.ts --declaration --emitDeclarationOnly --watch","build":"concurrently 'pnpm:build:*'","build:js":"node ./build.js","build:types":"tsc --outDir dist src/index.ts --declaration --emitDeclarationOnly","test":"pnpm test:eslint && yarn test:jest","test:eslint":"eslint --cache --fix '*.js' '{src,__tests__}/**/*.{js,ts,tsx}'","test:jest":"jest --no-watchman","release:patch":"pnpm build && release patch","release:minor":"pnpm build && release minor","release:major":"pnpm build && release major","prepare":"husky install"},"engines":{"node":">=16","pnpm":">=6"},"devDependencies":{"@testing-library/react":"^12.1.2","@types/jest":"^27.0.2","@types/react":"^17.0.34","@typescript-eslint/eslint-plugin":"^4.4.1","concurrently":"^6.3.0","esbuild":"^0.13.12","eslint":"^7.30.0","eslint-config-airbnb-typescript":"^12.3.1","eslint-config-prettier":"^8.3.0","eslint-plugin-import":"^2.22.0","eslint-plugin-jsx-a11y":"^6.4.1","eslint-plugin-prettier":"^3.4.0","eslint-plugin-react":"^7.26.1","estrella":"^1.4.1","husky":">=6","jest":"^27.3.1","lint-staged":">=10","prettier":"^2.3.2","react":"^17.0.2","react-dom":"^17.0.2","release":"^6.3.0","ts-jest":"^27.0.7","typescript":"^4.4.4"},"peerDependencies":{"react":"^17.0.2","react-dom":"^17.0.2"},"gitHead":"1609e67a57212b449c7a53af64122fb78bedbf52","_id":"react-use-suspense@0.0.1","_nodeVersion":"16.13.0","_npmVersion":"8.1.0","dist":{"integrity":"sha512-084R/BO/x/Mwpu6ZZ29lnDVL9fen1qcrXa1l1KFv0tlRsd9fXhJuFQO0fkDt1OUmcjJqTYrH6MwgcvREmfcUAw==","shasum":"ba7301e2ade79cf2bc5be7c8ea44d0cf8bd2e2f3","tarball":"https://registry.npmjs.org/react-use-suspense/-/react-use-suspense-0.0.1.tgz","fileCount":18,"unpackedSize":12890,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh2aNYCRA9TVsSAnZWagAAP+UP/0ZBah9wfRu5tQoZ5pf0\nQcMpno1qOA4byw9LmUI0CgpF1O7cVRTNowKdHzga89QzJ+jyO/Of1KELQGni\nSqAmLl9EnkazlR4g6uPDA2T9q0WerYrl766FnYs717wiGQlmQt0q89PfZuLk\nKEudV4H1e4hDv7c2QJZVpZyLKen308bbUF23Il+2yhRurZ8wbGSR4bTGgNyT\no4LdSTTwjj5kcobVsHgNkvyD05tb/Jys8kG10OtAlOYXK2c78fbM8EhgaC1V\nIpwBoGKgXJVfuA37FdZl25VeaDhJc8WvANcXs2YYV2Q8U2/5Kfoef0DBSX+X\nmbdQX+gnBDvWvnGkqA2wXXWOnTURET1vDn1tbzWBYqsaEBfXf/hqxoONUcuA\nYOkI1A2Y6oIT78Ygnqi0y9Bz/CrMTZB3nLdjB+DsfxEe0FccCnrfTVSSK3QM\nztP4mIE+5auxYODKpX0na8zWiNzbtqhR/bDOG8YLwzVTgNPr95WaMoEXh1YY\nN7GurgK/DLF3HzJ3rRuqFffh2wwGWi6PeYm0yTByKnZ9FN4sQlG2ufv2KZeK\n5wpXgyVyLSi9/qUw5Q52zD5q3ROBIY7rdMLiHc+iBelLNzch5MJKL+gGGfKg\nyhOg3gB/u/I8U3wxiTwlj4BJVJo+dMnhA1U7zIip96Xrse9xOMLU0oct4ty4\nDJAn\r\n=BN6Y\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIG2Xq//v/QqM2OCS8aQIDOLA6+xBb2wavIjcQxnlmWSqAiEAiMTdVqOxQofyoWNTTn6NdWNu9Bi9xQuzUmR/f4MU3v0="}]},"_npmUser":{"name":"quiibz","email":"quiibzdev@gmail.com"},"directories":{},"maintainers":[{"name":"quiibz","email":"quiibzdev@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/react-use-suspense_0.0.1_1641653080306_0.30347052408697106"},"_hasShrinkwrap":false}},"time":{"created":"2022-01-08T14:44:40.303Z","0.0.1":"2022-01-08T14:44:40.513Z","modified":"2022-05-15T07:11:32.807Z"},"maintainers":[{"name":"quiibz","email":"quiibzdev@gmail.com"}],"description":"Description","homepage":"https://github.com/QuiiBz/react-use-suspense#readme","repository":{"type":"git","url":"git+https://github.com/QuiiBz/react-use-suspense.git"},"author":{"name":"Tom Lienard"},"bugs":{"url":"https://github.com/QuiiBz/react-use-suspense/issues"},"license":"MIT","readme":"<p align=\"center\">\n    <h1 align=\"center\">react-use-suspense</h1>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://github.com/QuiiBz/react-use-suspense/actions\">\n        <img src=\"https://github.com/QuiiBz/react-use-suspense/workflows/CI/badge.svg\" />\n    </a>\n    <a href=\"https://github.com/QuiiBz/react-use-suspense/blob/main/LICENSE\">\n        <img src=\"https://img.shields.io/badge/Licence-MIT-blue\" />\n    </a>\n</p>\n\n<p align=\"center\">\n  Lightweight useSuspense hook for React\n  <br />\n  <br />\n  <code>yarn add react-use-suspense</code>\n</p>\n\n---\n\n- [âœ¨ Features](#-features)\n- [ðŸš€ Example](#-example)\n- [ðŸ“š Documentation](#-documentation)\n- [License](#license)\n\n**react-use-suspense** provides a very simple and lightweight `useSuspense` hook to use the [Suspense](https://reactjs.org/docs/react-api.html#reactsuspense) API with any async function.\n\n## âœ¨ Features\n\n- **Suspense** for new versions of React\n- **Dependency array** <sub>(like useEffect)</sub>\n- **TypeScript** ready\n- **Minimal** footprint <sub>(1kB gzipped)</sub>\n\n## ðŸš€ Example\n\n```tsx\nfunction Component() {\n  const data = useSuspense('data', async () => {\n    // ...\n    return 'Hello world'\n  })\n\n  return <p>{data}</p>\n}\n\nfunction App() {\n  return (\n    <Suspense fallback=\"Loading...\">\n      <Component />\n    </Suspense>,\n  )\n}\n```\n\n## ðŸ“š Documentation\n\n### Basics\n\nImport the `useSuspense` hook from `react-use-suspense`. This hook accepts a key that must be unique to the data you want to fetch, and an async function that returns this data:\n\n```tsx\nimport { useSuspense } from 'react-use-suspense'\n\nfunction Component() {\n  const data = useSuspense('unique-key', async () => {\n    // ...\n    return 'Hello world'\n  })\n}\n```\n\nWhen you need to use this component, simply wrap it inside a `Suspense` component and provide a `fallback` prop:\n\n```tsx\nfunction App() {\n  return (\n    <Suspense fallback=\"Loading...\">\n      <Component />\n    </Suspense>,\n  )\n}\n```\n\n### Dependency array\n\nSimilar as the `useEffect`, `useMemo`, `useCallback`... hooks, you can pass a third argument as known as a **dependency array**. Whenever one of the dependency in this array changes, the async function will re-run:\n\n```tsx\nfunction Component({ name }) {\n  const data = useSuspense('unique-key', async () => {\n    // ...\n    return 'Hello: ' + name\n  }, [name]) // Will trigger when name changes\n}\n```\n\n### Options\n\nAs the fourth argument, you can pass an optionnal object of options:\n\n#### `keepPreviousValue`\n\nThis option will make sure to not trigger a `Suspense` when the async function re-runs. This is the default behavior, and you can disable to always trigger a `Suspense`:\n\n```tsx\nconst data = useSuspense('unique-key', async () => {\n  // ...\n  return 'Hello: ' + name\n}, [name], {\n  keepPreviousValue: false\n})\n```\n\n#### `equalFn`\n\nYou can provide a custom equality function that is used to compare old and new dependency arrays.\n\n```tsx\nconst data = useSuspense('unique-key', async () => {\n  // ...\n  return 'Hello world'\n}, [], {\n  // This is the default one\n  equalFn: (a, b) => JSON.stringify(a) === JSON.stringify(b)\n})\n```\n\nAlternatively, you can update these options globally if you always want to have those behaviors:\n\n```tsx\nimport { setKeepPreviousValue, setEqualFn } from 'react-use-suspense'\n\nsetKeepPreviousValue(false)\nsetEqualFn((a, b) => JSON.stringify(a) === JSON.stringify(b))\n```\n\n## License\n\n[MIT](./LICENSE)\n","readmeFilename":"README.md"}