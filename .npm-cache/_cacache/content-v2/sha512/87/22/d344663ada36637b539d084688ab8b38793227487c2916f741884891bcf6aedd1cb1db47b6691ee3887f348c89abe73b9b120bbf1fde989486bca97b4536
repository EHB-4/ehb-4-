{"_id":"bannerbear","_rev":"5-4809b56a97c3a1ce171753cc5aa72e04","name":"bannerbear","dist-tags":{"latest":"1.4.0"},"versions":{"1.0.0":{"name":"bannerbear","version":"1.0.0","description":"","main":"index.js","scripts":{"test":"echo \"Error: no test specified\" && exit 1"},"author":"","license":"ISC","_id":"bannerbear@1.0.0","_nodeVersion":"14.15.4","_npmVersion":"6.14.10","dist":{"integrity":"sha512-RZaH8YIA6J5Dgzy74bSiotdSsZ3mt/fLSLMY6xVD5jF71f3G0n8eE55g8H/bwKCKwtRK1NOLc4V5FM3wccRE5w==","shasum":"cd412e766b49c62ef7d47d7fdd69cdcb208e2e5d","tarball":"https://registry.npmjs.org/bannerbear/-/bannerbear-1.0.0.tgz","fileCount":1,"unpackedSize":206,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhp0cJCRA9TVsSAnZWagAAaF0QAKL0jDpiSSv1gdnZRFZr\nNGCWGWxMKJdH97c1+302lY8ptsdMDx96Bs0PyBs5KhqhyFSSu06PH9GRLktj\n6TN/kEWDjFopgx/EvcbyMoYOPNqGDsVsn9mibA/6AdZyCsejUpIuMgcOCj3e\njiq63pB+0XXDgIAOUhHvDMGxGtbpDPi6CuHel2VgH6Ib0o7Ez3UZV7+T3X83\nl1doqTVIK8ZFT75xcIwQVGsfPNII/FHtQKbcFTkF4LDz0GIpDul/VvuCwQV7\nTcneJkHAtRKgNJ89gHIEwKSslRo95hnHfNA1TUOTZxuuJxJ8Ik+y686S6uke\nC5ILwTljabGGy0zuhyA7fARzjbu/JL8BouICg9+1KT9TpDwHJG4Bn6PxKQ2i\ntFdXk6waYPmk6leQyGOrd1f03tZAbDB5vCjXDFlqckBN5KhTkuh8STDWWmpb\nt8/EopxvUyDe0XjyT24sSTWAytCtZLxC2zWfVmf7VM4hN3KMlFbS6I+pJPr0\nMaBTzXu+jNlAhql8mKYWBqSZPXYvTdpMZ18VQCrncOE1cF7jTIYpW6OIeoYW\ndV/99Ckd3xS7BXvVgVvtXyH9BTzQ7Fq5BYBVNJ0MiT9ZVf3WlyALT6fEToiL\nrKz+JMBl6unMvqUFAW6Sj49Q6oKQg5ZhDBB73L3F7Z9L/BDOn0kxvC+AP9Tz\nrwpY\r\n=RfKN\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIETdfX2MiXhNl+pAFJ08l1SYfPWBmg0t2Xrw5VVRTyQHAiEAo5X7KtlTuhRORHlQDp6s+pmqquKIZYsiNVIGsSSmxK0="}]},"_npmUser":{"name":"yongfook","email":"yongfook@gmail.com"},"directories":{},"maintainers":[{"name":"yongfook","email":"yongfook@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bannerbear_1.0.0_1638352649511_0.8025816844438967"},"_hasShrinkwrap":false},"1.1.0":{"name":"bannerbear","version":"1.1.0","description":"Bannerbear API Wrapper","main":"/lib/bannerbear.js","types":"/lib/bannerbear.d.ts","scripts":{"build":"tsc"},"author":{"name":"Jon Yongfook","email":"support@bannerbear.com"},"license":"MIT","repository":{"type":"git","url":"git://github.com/yongfook/bannerbear-node.git"},"bugs":{"url":"https://github.com/yongfook/bannerbear-node/issues"},"engines":{"node":">=12.*"},"dependencies":{"@types/node":">=12.0.0","base64url":"^3.0.1","node-fetch":"^2.6.6"},"devDependencies":{"@types/node-fetch":"^2.5.12","@typescript-eslint/eslint-plugin":"^5.5.0","@typescript-eslint/parser":"^5.5.0","eslint":"^8.3.0","eslint-config-airbnb-base":"^15.0.0","eslint-plugin-import":"^2.25.3","typescript":"^4.5.2"},"gitHead":"cacfb725eda18308dbb2401a1f2471daafeacc85","homepage":"https://github.com/yongfook/bannerbear-node#readme","_id":"bannerbear@1.1.0","_nodeVersion":"14.15.4","_npmVersion":"6.14.10","dist":{"integrity":"sha512-wTJSw49zl2y+4zJk+f0aD2FjuYw5i/gH5P1rQ/28FP68YARa4lR9GGtJLUcpl6H1FWVp2DFb2wn3TyQyTnOfgA==","shasum":"00eb6d784e1368e602da45853f386cc8b7f2aeac","tarball":"https://registry.npmjs.org/bannerbear/-/bannerbear-1.1.0.tgz","fileCount":6,"unpackedSize":30876,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhsAT9CRA9TVsSAnZWagAACOUP/3kiNUOOW4tvArSov4Fa\nKQII+1j21zEcj3/7S25g/wfZsXIntlh4gDiGywnQpa9iSC4A1aavl/xLXkSn\ngZsi5suiQv5rX2jDSYeNpXyna49NY+aZ8YOfjBURqb57b8Km/DZicg6Icv++\nLvt3WMln0B7HiYMqMyo/oODW1W6P5bRDRfONtDxWlH5dURABnRL2EYtflcaI\nkEGxQuZhO7e9KNoVVnVhuADbpYyDs9rvhCu/5bSxxjVlSpd3AKm+4L3oF0jr\nfiaXL5hN687LUDoubBsasHtpj6wwt+/bImr93xlsFiv+674t8KskMA2R/qmv\nR7PKu0ltJyQr4Yae6470OJPzDN0uRuxfZQzbQgJios0EzzQUMcuc8uKCo5x/\nLwvkqh1MX0Cv+EDCYkNxztTN4bsQKtuyx6YHYVC6E8pRosvYkDEXB+YaiGq5\n3nCigsSXXs5ORjmnRoNnwxOgMttycg9Msfns8Lq9VG117NeNvEkTjPv7QM9n\ndljmZ1OcwzMjIh6LpCuPHu04GudV2+ksDKR1r+lgsvmOvJeDin/Ozgpg0Gt7\ndSPejQyGD9lAPs3r7cu+AMlcYTg77pbss/NUW4T3uBDhaJsSYiT42+YoBxIE\n6hFdGjyXMCG+6BtIMz73sBUfbhuOZ08XXIsbXVsGjF2UcH0CAkvdwtv4Xx0T\ntLNu\r\n=M2iM\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQD7mvdfkRzGXehneJlt1CKec1JyVoOxIBPCOZAKbTuFEwIgSAMu8owrC6zYgR5jSpmx5vhABcIIDY0HAxGyNPwkrho="}]},"_npmUser":{"name":"yongfook","email":"yongfook@gmail.com"},"directories":{},"maintainers":[{"name":"yongfook","email":"yongfook@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bannerbear_1.1.0_1638925565132_0.039749399767873506"},"_hasShrinkwrap":false},"1.2.0":{"name":"bannerbear","version":"1.2.0","description":"Bannerbear API Wrapper","main":"/lib/bannerbear.js","types":"/lib/bannerbear.d.ts","scripts":{"build":"tsc"},"author":{"name":"Jon Yongfook","email":"support@bannerbear.com"},"license":"MIT","repository":{"type":"git","url":"git://github.com/yongfook/bannerbear-node.git"},"bugs":{"url":"https://github.com/yongfook/bannerbear-node/issues"},"engines":{"node":">=12.*"},"dependencies":{"@types/node":">=12.0.0","base64url":"^3.0.1","node-fetch":"^2.6.6"},"devDependencies":{"@types/node-fetch":"^2.5.12","@typescript-eslint/eslint-plugin":"^5.5.0","@typescript-eslint/parser":"^5.5.0","eslint":"^8.3.0","eslint-config-airbnb-base":"^15.0.0","eslint-plugin-import":"^2.25.3","typescript":"^4.5.2"},"gitHead":"5605b5fa6a501464c1b0ccc579a7344e60c09df3","homepage":"https://github.com/yongfook/bannerbear-node#readme","_id":"bannerbear@1.2.0","_nodeVersion":"14.17.0","_npmVersion":"6.14.13","dist":{"integrity":"sha512-34hhn7oHIH+rJchjGZY/3VEBDw97/VFoaMKecGhAX2ckTyo4HIOo2Riq9EnnxEYBaQHjrFkfCjejLYY+fTxbBA==","shasum":"908faa40ddc222cb782ac0d784aac9a2f10ba4f7","tarball":"https://registry.npmjs.org/bannerbear/-/bannerbear-1.2.0.tgz","fileCount":10,"unpackedSize":47672,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhsWmaCRA9TVsSAnZWagAA33EQAITHIWajKiZ9vSP9dsJV\nuh6a5jI40VbLamlwTmYRg7YDudXhpKpwDqvJSKnyzRflIAI4/Xnxlw7MJdiw\nSPjS4+eg4wsikVLcD6n0/D/6lLbDN142T6wItCGg6PpSvMTEuRWLgcZe/Xbb\nkcqYMJ2+xWuZbEl6Rx5n3tBO+zrsVu9+Tl4HPnAhfawO8Dlyt45T0YNYRWTS\nivSfT7Rbt6sK3Fnss2GLZ/+1vy6f20VxkJXkD51eTERL3Fj2sb7DfVb3c7Ul\no1lLsA0jFgDlkJJxNkFU53Q8RjTyfIf+7Q4jMwoymr31VKUUtKFQdWkdbFw7\nIj1XtHbUKt/crPYqTA1GyI0ES9Q+TF8Tbo5swqr7NOWtg5BEPFx6D9Oa5O3N\nUotDx+VOI6lYpOvAFhEVSFg/pIt1egQS1Q1yZX2ASk5pJZyzd6661Urp0UWz\nDruSDloZImornfEZLSCdc4XlaLVUMIAI+RC79n/zE/SJdh1NticOBHTUtNr9\nujdxwMLzFa9gvaWTURt2sGYmhb4IOR/tY2CVZjINwtKdO9aJyL0W6MUu1Arc\nbIeCib1X7L8pHCgDau5gnbYj5tmyfjDCWQ9fbA9fUz93nnRNlxJ/2OdCZQbD\nU/91iN08tweOfthj8PjgS3MIK35kmIRsa+Y4a6kw3K3iMLTt4IlmrVhxKstB\nfO8O\r\n=XHQy\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEYCIQDirNQf63GZOZpXZ+6fPE1cscg6hhvpWy8cttn4ZzQAOwIhAMRiGTU4T23fi1cAOm0iRIZm77rddnE/UP1x5tHmg75E"}]},"_npmUser":{"name":"yongfook","email":"yongfook@gmail.com"},"directories":{},"maintainers":[{"name":"yongfook","email":"yongfook@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bannerbear_1.2.0_1639016858713_0.48353740955331426"},"_hasShrinkwrap":false},"1.3.0":{"name":"bannerbear","version":"1.3.0","description":"Bannerbear API Wrapper","main":"lib/bannerbear.js","types":"lib/bannerbear.d.ts","scripts":{"build":"tsc"},"author":{"name":"Jon Yongfook","email":"support@bannerbear.com"},"license":"MIT","repository":{"type":"git","url":"git://github.com/yongfook/bannerbear-node.git"},"bugs":{"url":"https://github.com/yongfook/bannerbear-node/issues"},"engines":{"node":">=12.*"},"dependencies":{"@types/node":">=12.0.0","base64url":"^3.0.1","node-fetch":"^2.6.6"},"devDependencies":{"@types/node-fetch":"^2.5.12","@typescript-eslint/eslint-plugin":"^5.5.0","@typescript-eslint/parser":"^5.5.0","eslint":"^8.3.0","eslint-config-airbnb-base":"^15.0.0","eslint-plugin-import":"^2.25.3","typescript":"^4.5.2"},"gitHead":"6258bd715b9f5647c072650b35afa8def2e75ce1","homepage":"https://github.com/yongfook/bannerbear-node#readme","_id":"bannerbear@1.3.0","_nodeVersion":"14.17.0","_npmVersion":"6.14.13","dist":{"integrity":"sha512-IXAwuQp0rn8HzLs0EiXK7ocEOXRT1MtSczw+/Zwee5w72E0trPb0aFeDIjjqS7z+y6jrM3/qYg+9tFy/Avz/mw==","shasum":"0d84ed2f83a05ec8532bcf30ee2cc43f72529096","tarball":"https://registry.npmjs.org/bannerbear/-/bannerbear-1.3.0.tgz","fileCount":10,"unpackedSize":47670,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhsWrPCRA9TVsSAnZWagAAZSgP/3Kncr2yMEZusIxb+EAQ\ne4X6tnvTjAPjXiUhUC8TbleOnOvPF0X9KyNSsvSBDgk1s2ckyUW68QxRNE2W\nH9qnlUabUTposN3/6GT9UjBDScZFiSvNFuwtuE8wnbZNMUU0bEzSQsV2JAI5\nVouJ3TOo+Yw8IbJB2dkn/TOwf2K20yxcLiUrUSfn5NyacM+NqHBtPEAXdLVy\n9YRNOg9ZoKFc8zEA0IXox9cygZB+WFNMXWHxfjujxRhQQ2yR+KMx8PckETkJ\nAReIVTaq3lflsSDiGby6EtO5/NdVulEk8N80cypTqRHIwZjeTGWHxnKzEwXl\nuijL3IlaVljZ3FErmpdjFh8Y/fc9B/ylzjppyn/U+Jn9dOVOyW0dGTRhSQQx\nBcGoXLkPn8rAibmWgheQJeIe8qUHPlJFIsevHZ6xO5w2GbE6SjpUzclmX3Gd\nhHOrUMaIKHt393eJtbRrM3vMfluHPYgfSnJkbeCAtGegmOsD2dQo3fCe+JiJ\nX15DwvK6IJ6qlryrgMtvXdy+JoK5qhU/gh94p6UrG1E8cCUntVrOefRC35mV\nnxpJ1v0joqGkT95ZlNlepVgOealXuTeL9OPW1P/ZmjdN4I+26Ytj5v5Qmb5+\noo7bB3yxQEcI/GPB/OsxdM/QX7R/gw3dxiIS6ZcOK0J91H6xtEGJoEzd5nPT\n2PhO\r\n=5Kga\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCIQDv73XW8134lFahDC3sBtDSxM0a/Wuzw5EVY5plBr8eFgIgXY65hari03jEa4z4nflEIysc0AYsDcRG4+7ljfjmaew="}]},"_npmUser":{"name":"yongfook","email":"yongfook@gmail.com"},"directories":{},"maintainers":[{"name":"yongfook","email":"yongfook@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bannerbear_1.3.0_1639017167446_0.749810662078874"},"_hasShrinkwrap":false},"1.4.0":{"name":"bannerbear","version":"1.4.0","description":"Bannerbear API Wrapper","main":"lib/bannerbear.js","types":"lib/bannerbear.d.ts","scripts":{"build":"tsc"},"author":{"name":"Jon Yongfook","email":"support@bannerbear.com"},"license":"MIT","repository":{"type":"git","url":"git://github.com/yongfook/bannerbear-node.git"},"bugs":{"url":"https://github.com/yongfook/bannerbear-node/issues"},"engines":{"node":">=12.*"},"dependencies":{"@types/node":">=12.0.0","base64url":"^3.0.1","node-fetch":"^2.6.6"},"devDependencies":{"@types/node-fetch":"^2.5.12","@typescript-eslint/eslint-plugin":"^5.5.0","@typescript-eslint/parser":"^5.5.0","eslint":"^8.3.0","eslint-config-airbnb-base":"^15.0.0","eslint-plugin-import":"^2.25.3","typescript":"^4.5.2"},"gitHead":"4bbb6ba7a1e5f8d6088eb55610d515cd0a600375","homepage":"https://github.com/yongfook/bannerbear-node#readme","_id":"bannerbear@1.4.0","_nodeVersion":"14.15.4","_npmVersion":"6.14.10","dist":{"integrity":"sha512-ZxgT1KfZy6FZVumQEj6Q6ivKBeTlcDN1PFqXsu9zw9v8/dw3L4i4Mex57XtPVsNsWUC4bP5wsyAkfaf6eMBtUQ==","shasum":"d4fd6d0f59c7fe64f7af4afdc76d7f5a89edf8be","tarball":"https://registry.npmjs.org/bannerbear/-/bannerbear-1.4.0.tgz","fileCount":10,"unpackedSize":47911,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJhss77CRA9TVsSAnZWagAAGn0QAILOosWTK727XWkUhe5T\nFl3pE3pF5YSE7cscORa1RmaaFPbN9yrgVRQtQsACWFZXH0PqWYpuXIlyrHVM\nBJmQrVTMjNESk3Kph7bo6BW7z0SJWDUhLJBryDCZfzSmsXyYZyXTMULY8bEM\nOpYWBKx4Y9IsOjQP/ZgndP8cXm4fgdqxetonHkBZE9/rgQyPLOD5gm/5/RU9\nzT/WqMT94cOvVsrMtqALKWpj7xI0jrfYTi40LHXiK3Fqfhz6m2L9QuS0uVIL\nIPGXXlTMJCsh045RjpzBHDZkon/qJ+vTtQwuFvOZmDFBN9NOaZah0X2aGNg3\nc2BIBfdg5UfpQFYbUDwOA4urLjvMuHtjmaQWbRZqo5iTqCSqHzOf6c0qKeU9\nTclvfh0cf42LNsY/0CjuE++wPmKgsQeF42D8AIo/k9nNPuh3ViKFfUI37qg1\nGGcNB0m86+H7GMarzrjxjYdbizklUfe89CL1cZzX/xEJpa7Fj0vL195m6wMo\nZWj2w+9838kWSk6v//AFn1A1YkmOo3/ae0eIg2Swx9vaOHFxT5wlKAgZAEol\n2mGQVRw/r6cWf8gRLaYuKWB9mFmkUoMLgJxFxo4VX8GRLTWRYNWdcmywlDTR\nHXqbfwAyeAaWtrL9hs96lLpma8T8rvsgCpvVV+vE1MWoIQJwNR6ZSWk20L1o\nrAmG\r\n=32Qt\r\n-----END PGP SIGNATURE-----\r\n","signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEQCIHPV+cVhbq/6qywAOFD10r7ZkoROiQltbFswJB4aAJZsAiAsiTXTfOI+H5NkEwDuDhjAfbB1csjYmsfOqF3tHFnyFQ=="}]},"_npmUser":{"name":"yongfook","email":"yongfook@gmail.com"},"directories":{},"maintainers":[{"name":"yongfook","email":"yongfook@gmail.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/bannerbear_1.4.0_1639108347571_0.2726250936588528"},"_hasShrinkwrap":false}},"time":{"created":"2021-12-01T09:57:29.511Z","1.0.0":"2021-12-01T09:57:29.626Z","modified":"2022-04-11T17:00:49.366Z","1.1.0":"2021-12-08T01:06:05.295Z","1.2.0":"2021-12-09T02:27:38.879Z","1.3.0":"2021-12-09T02:32:47.595Z","1.4.0":"2021-12-10T03:52:27.692Z"},"maintainers":[{"name":"yongfook","email":"yongfook@gmail.com"}],"license":"MIT","readme":"# Bannerbear Node.js Library\n\nA Node.js wrapper for the Bannerbear API - an image and video generation service.\n\n## Documentation\n\nFind the full API documentation [here](https://developers.bannerbear.com/)\n\n## Requirements\n\nNode 12 or higher.\n\n## Installation\n\nInstall the package with:\n\n```sh\nnpm install --save bannerbear\n# or\nyarn add bannerbear\n```\n\n## Usage\n\n### Import\nIn Javascript\n```js\nconst Bannerbear = require('bannerbear')\n```\n\nAnd in typescript\n```ts\nimport Bannerbear from 'bannerbear';\n```\n\n### Authentication\n\ninstantiate\nGet the API key for your project in Bannerbear and then instantiate a new client.\n\n```ts\nconst bb = new Bannerbear(\"your api key\");\n```\n\nAlternatively, set the API key in an environment variable named `BANNERBEAR_API_KEY`.\n\n```ts\nconst bb = new Bannerbear();\n```\n\n### Usage with TypeScript\n\n```ts\nimport Bannerbear from \"bannerbear\";\nconst bb = new Bannerbear(\"your api key\");\n\nconst createImage = async () => {\n  const params: Bannerbear.CreateImageParams = {\n    metadata: [],\n  };\n\n  const image = await bb.create_image(\"image uid\", params);\n};\ncreateImage();\n```\n\n### Account Info\n\nReturn info about the account or project associated with the API key.\n\n```ts\nconst account = await bb.account();\n```\n\n### Images\n\n#### Create an Image\n\nTo create an image you reference a template uid and a list of modifications. The default is async generation meaning the API will respond with a `pending` status and you can use `get_image` to retrieve the final image.\n\n```ts\nconst images = await bb.create_image(\"template uid\", {\n  modifications: [\n    {\n      name: \"headline\",\n      text: \"Hello world!\",\n    },\n    {\n      name: \"photo\",\n      image_url:\n        \"https://images.unsplash.com/photo-1555400038-63f5ba517a47?w=1000&q=80\",\n    },\n  ],\n});\n```\n\nYou can also create images synchronously - this will take longer to respond but the image will be delivered in the response:\n\n```ts\nconst images = await bb.create_image(\n  \"template uid\",\n  {\n    modifications: [\n      {\n        name: \"headline\",\n        text: \"Hello world!\",\n      },\n      {\n        name: \"photo\",\n        image_url:\n          \"https://images.unsplash.com/photo-1555400038-63f5ba517a47?w=1000&q=80\",\n      },\n    ],\n  },\n  true\n);\n```\n\n##### Options\n\n- `modifications`: an array of [modifications](https://developers.bannerbear.com/#post-v2-images) you would like to make (`array`)\n- `webhook_url`: a webhook url to post the final image object to (`string`)\n- `transparent`: render image with a transparent background (`boolean`)\n- `synchronous`: generate the image synchronously (`boolean`)\n- `render_pdf`: render a PDF in addition to an image (`boolean`)\n- `metadata`: include any metadata to reference at a later point (`string`)\n\n#### Get an Image\n\n```ts\nawait bb.get_image(\"image uid\");\n```\n\n#### List all images\n\n```ts\nawait bb.list_images();\n```\n\nOptionally you can provide a page and limit\n\n```ts\nawait bb.list_images(10, 25);\n```\n\n### Videos\n\n#### Create a Video\n\n```ts\nawait bb.create_video(\"video template uid\", {\n  input_media_url: \"https://www.yourserver.com/videos/awesome_video.mp4\",\n  modifications: [\n    {\n      name: \"headline\",\n      text: \"Hello world\",\n    },\n  ],\n});\n```\n\n##### Options\n\n- `input_media_url`: a url to a publicly available video file you want to import (string)\n- `modifications`: an array of modifications you would like to make to the video overlay (array)\n- `webhook_url`: a webhook url to post the final video object to (string)\n- `blur`: blur the imported video from 1-10 (integer)\n- `trim_to_length_in_seconds`: trim the video to a specific length (integer)\n- `create_gif_preview`: create a short preview gif (boolean)\n- `metadata`: include any metadata to reference at a later point (string)\n\nIf your video is using the \"Multi Overlay\" build pack then you can pass in a set of frames to render via:\n\n- `frames`: an array of sets of modifications (array)\n- `frame_durations`: specify the duration of each frame (array)\n\n#### Get a video\n\n```ts\nawait bb.get_video(\"video uid\");\n```\n\n#### Update a Video\n\n```ts\nawait bb.update_video(\"video uid\", {\n  approved: true,\n  transcription: [\n    \"This is a new transcription\",\n    \"It must contain the same number of lines\",\n    \"As the previous transcription\",\n  ],\n});\n```\n\n##### Options\n\n- `approved`: approve the video for rendering (boolean)\n- `transcription`: an array of strings to represent the new transcription (will overwrite the existing one) (array)\n\n#### List all Videos\n\n```ts\nawait bb.list_videos();\n```\n\n##### Options\n\n- `page`: pagination (`integer`)\n\n### Collections\n\nCreate multiple images in one API request.\n\n```ts\nawait bb.get_collection(\"collection uid\");\nawait bb.list_collections(3);\nawait bb.create_collection(\n  \"template set uid\",\n  {\n    modifications: [\n      {\n        name: \"headline\",\n        text: \"Hello World!\",\n      },\n    ],\n  },\n  true\n);\n```\n\n##### Options for `create_collection`\n\n- `modifications`: an array of [modifications](https://developers.bannerbear.com/#post-v2-images) you would like to make (`array`)\n- `webhook_url`: a webhook url to post the final collection object to (`string`)\n- `transparent`: render image with a transparent background (`boolean`)\n- `synchronous`: generate the images synchronously (`boolean`)\n- `metadata`: include any metadata to reference at a later point (`string`)\n\n### Animated Gifs\n\nCreate a slideshow style gif\n\n```ts\nawait bb.get_animated_gif(\"gif uid\")\nawait bb.list_animated_gifs(3)\nawait bb.create_animated_gif(\"template uid\",\n  frames: [\n    [ // frame 1 starts here\n      {\n        name: \"layer1\",\n        text: \"This is my text\"\n      },\n      {\n        name: \"photo\",\n        image_url: \"https//www.pathtomyphoto.com/1.jpg\"\n      }\n    ],\n    [ // frame 2 starts here\n      {\n        name: \"layer1\",\n        text: \"This is my follow up text\"\n      },\n      {\n        name: \"photo\",\n        image_url: \"https://www.pathtomyphoto.com/2.jpg\"\n      }\n    ]\n  ]\n)\n```\n\n##### Options for `create_animated_gif`\n\n- `frames`: an array of arrays of [modifications](https://developers.bannerbear.com/#post-v2-images) you would like to make (`array`)\n- `frame_durations`: an array of times (in seconds) to show each frame (`array`)\n- `input_media_url`: optionally import an external video file to use as part of the gif\n- `fps`: frames per second e.g. 1 (`integer`)\n- `loop`: whether to loop or not (`boolean`)\n- `webhook_url`: a webhook url to post the final gif object to (`string`)\n- `metadata`: include any metadata to reference at a later point (`string`)\n\n### Movies\n\nAssemble video clips or still images into a single movie with transitions.\n\n```ts\nawait bb.get_movie(\"movie uid\");\nawait bb.list_movies(3);\nawait bb.create_movie({\n  width: 800,\n  height: 800,\n  transition: \"pixelize\",\n  inputs: [\n    {\n      asset_url:\n        \"https://images.unsplash.com/photo-1635910160061-4b688344bd20?w=500&q=60\",\n    },\n    {\n      asset_url: \"https://i.imgur.com/fH7a5dO.png\",\n    },\n  ],\n});\n```\n\n##### Options for `create_movie`\n\n- `width`: the movie width in pixels (`integer`)\n- `height`: the movie height in pixels (`integer`)\n- `transition`: the transition style: fade, pixelize, slidedown, slideright, slideup, slideleft (`string`)\n- `inputs`: a list of [inputs](https://developers.bannerbear.com/#post-v2-movies) (`array`)\n- `webhook_url`: a webhook url to post the final movie object to (`string`)\n- `metadata`: include any metadata to reference at a later point (`string`)\n\n### Screenshots\n\nTake screenshots of websites.\n\n```ts\nawait bb.get_screenshot(\"screenshot uid\");\nawait bb.list_screenshots(3);\nawait bb.create_screenshot(\n  \"https://www.bannerbear.com/\",\n  {\n    width: 1000,\n  },\n  true\n);\n```\n\n##### Options for `create_screenshot`\n\n- `width`: the desired screenshot width in pixels (`integer`)\n- `height`: the desired screenshot height in pixels (`integer`)\n- `synchronous`: generate the screenshot synchronously (`boolean`)\n- `mobile`: use a mobile user agent\n- `webhook_url`: a webhook url to post the final screenshot object to (`string`)\n\n### Templates\n\n```ts\nawait bb.get_template(\"template uid\");\nawait bb.update_template(\"template uid\", {\n  name: \"New Template Name\",\n  tags: [\"portrait\", \"instagram\"],\n});\nawait bb.list_templates({ page: 2, tag: \"portrait\" });\n```\n\n### Template Sets\n\n```ts\nawait bb.get_template_set(\"template set uid\");\nawait bb.list_template_sets(2);\n```\n\n### Video Templates\n\n```ts\nawait bb.get_video_template(\"video template uid\");\nawait bb.list_video_templates(2);\n```\n\n### Signed URLs\n\nThis gem also includes a convenient utility for generating signed urls. Authenticate as above, then:\n\n```ts\nawait bb.generate_signed_url(\"base uid\", { modifications: [] });\n\n// example\nawait bb.generate_signed_url(\"A89wavQyY3Bebk3djP\", {\n  modifications: [\n    {\n      name: \"country\",\n      text: \"testing!\",\n    },\n    {\n      name: \"photo\",\n      image_url:\n        \"https://images.unsplash.com/photo-1638356435991-4c79b00ebef3?w=764&q=80\",\n    },\n  ],\n});\n// => https://ondemand.bannerbear.com/signedurl/A89wavQyY3Bebk3djP/image.jpg?modifications=W3sibmFtZSI6ImNvdW50cnkiLCJ0ZXh0IjoidGVzdGluZyEifSx7Im5hbWUiOiJwaG90byIsImltYWdlX3VybCI6Imh0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNjM4MzU2NDM1OTkxLTRjNzliMDBlYmVmMz93PTc2NCZxPTgwIn1d&s=40e7c9d4902b86ea83e0c400e57d7cc580534fd527e234d40a0c7ace589a16eb\n```\n\n## Contributing\n\nBug reports and pull requests are welcome on GitHub at https://github.com/yongfook/bannerbear-node. This project is intended to be a safe, welcoming space for collaboration, and contributors are expected to adhere to the [code of conduct](https://github.com/yongfook/bannerbear-ruby/blob/master/CODE_OF_CONDUCT.md).\n\n## License\n\nThe gem is available as open source under the terms of the [MIT License](https://opensource.org/licenses/MIT).\n\n## Code of Conduct\n\nEveryone interacting in the Bannerbear project's codebases, issue trackers, chat rooms and mailing lists is expected to follow the [code of conduct](https://github.com/yongfook/bannerbear-ruby/blob/master/CODE_OF_CONDUCT.md).\n","readmeFilename":"README.md","description":"Bannerbear API Wrapper","homepage":"https://github.com/yongfook/bannerbear-node#readme","repository":{"type":"git","url":"git://github.com/yongfook/bannerbear-node.git"},"author":{"name":"Jon Yongfook","email":"support@bannerbear.com"},"bugs":{"url":"https://github.com/yongfook/bannerbear-node/issues"}}